<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.5 on 2021-04-14 -->

<plugin>
  <name>Apache Maven Compiler Plugin</name>
  <description>The Compiler Plugin is used to compile the sources of your project.</description>
  <groupId>org.apache.maven.plugins</groupId>
  <artifactId>maven-compiler-plugin</artifactId>
  <version>3.7.0</version>
  <goalPrefix>compiler</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
    <mojo>
      <goal>compile</goal>
      <description>Compiles application sources</description>
      <requiresDependencyResolution>compile</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>compile</phase>
      <implementation>org.apache.maven.plugin.compiler.CompilerMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>2.0</since>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>allowPartialRequirements</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>annotationProcessorPaths</name>
          <type>java.util.List</type>
          <since>3.5</since>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Classpath elements to supply as annotation processor path. If specified, the compiler will detect annotation
processors only in those classpath elements. If omitted, the default classpath is used to detect annotation
processors. The detection itself depends on the configuration of {@code annotationProcessors}.
&lt;/p&gt;
&lt;p&gt;
Each classpath element is specified using their Maven coordinates (groupId, artifactId, version, classifier,
type). Transitive dependencies are added automatically. Example:
&lt;/p&gt;

&lt;pre&gt;
&amp;lt;configuration&amp;gt;
  &amp;lt;annotationProcessorPaths&amp;gt;
    &amp;lt;path&amp;gt;
      &amp;lt;groupId&amp;gt;org.sample&amp;lt;/groupId&amp;gt;
      &amp;lt;artifactId&amp;gt;sample-annotation-processor&amp;lt;/artifactId&amp;gt;
      &amp;lt;version&amp;gt;1.2.3&amp;lt;/version&amp;gt;
    &amp;lt;/path&amp;gt;
    &amp;lt;!-- ... more ... --&amp;gt;
  &amp;lt;/annotationProcessorPaths&amp;gt;
&amp;lt;/configuration&amp;gt;
&lt;/pre&gt;</description>
        </parameter>
        <parameter>
          <name>annotationProcessors</name>
          <type>java.lang.String[]</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Names of annotation processors to run. Only applies to JDK 1.6+
If not set, the default annotation processors discovery process applies.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>basedir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The directory to run the compiler from if fork is true.</description>
        </parameter>
        <parameter>
          <name>buildDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The target directory of the compiler if fork is true.</description>
        </parameter>
        <parameter>
          <name>compilePath</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>compileSourceRoots</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>The source directories containing the sources to be compiled.</description>
        </parameter>
        <parameter>
          <name>compilerArgs</name>
          <type>java.util.List</type>
          <since>3.1</since>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Sets the arguments to be passed to the compiler if {@link #fork} is set to &lt;code&gt;true&lt;/code&gt;.
Example:
&lt;pre&gt;
&amp;lt;compilerArgs&amp;gt;
  &amp;lt;arg&amp;gt;-Xmaxerrs=1000&amp;lt;/arg&amp;gt;
  &amp;lt;arg&amp;gt;-Xlint&amp;lt;/arg&amp;gt;
  &amp;lt;arg&amp;gt;-J-Duser.language=en_us&amp;lt;/arg&amp;gt;
&amp;lt;/compilerArgs&amp;gt;
&lt;/pre&gt;</description>
        </parameter>
        <parameter>
          <name>compilerArgument</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Sets the unformatted single argument string to be passed to the compiler if {@link #fork} is set to
&lt;code&gt;true&lt;/code&gt;. To pass multiple arguments such as &lt;code&gt;-Xmaxerrs 1000&lt;/code&gt; (which are actually two
arguments) you have to use {@link #compilerArguments}.
&lt;/p&gt;
&lt;p&gt;
This is because the list of valid arguments passed to a Java compiler varies based on the compiler version.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>compilerArguments</name>
          <type>java.util.Map</type>
          <since>2.0.1</since>
          <deprecated>use {@link #compilerArgs} instead.</deprecated>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Sets the arguments to be passed to the compiler (prepending a dash) if {@link #fork} is set to &lt;code&gt;true&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This is because the list of valid arguments passed to a Java compiler varies based on the compiler version.
&lt;/p&gt;
&lt;p&gt;
To pass &lt;code&gt;-Xmaxerrs 1000 -Xlint -Xlint:-path -Averbose=true&lt;/code&gt; you should include the following:
&lt;/p&gt;

&lt;pre&gt;
&amp;lt;compilerArguments&amp;gt;
  &amp;lt;Xmaxerrs&amp;gt;1000&amp;lt;/Xmaxerrs&amp;gt;
  &amp;lt;Xlint/&amp;gt;
  &amp;lt;Xlint:-path/&amp;gt;
  &amp;lt;Averbose&amp;gt;true&amp;lt;/Averbose&amp;gt;
&amp;lt;/compilerArguments&amp;gt;
&lt;/pre&gt;</description>
        </parameter>
        <parameter>
          <name>compilerId</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The compiler id of the compiler to use. See this
&lt;a href=&quot;non-javac-compilers.html&quot;&gt;guide&lt;/a&gt; for more information.</description>
        </parameter>
        <parameter>
          <name>compilerReuseStrategy</name>
          <type>java.lang.String</type>
          <since>2.5</since>
          <required>false</required>
          <editable>true</editable>
          <description>Strategy to re use javacc class created:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;reuseCreated&lt;/code&gt; (default): will reuse already created but in case of multi-threaded builds, each
thread will have its own instance&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reuseSame&lt;/code&gt;: the same Javacc class will be used for each compilation even for multi-threaded build
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alwaysNew&lt;/code&gt;: a new Javacc class will be created for each compilation&lt;/li&gt;
&lt;/ul&gt;
Note this parameter value depends on the os/jdk you are using, but the default value should work on most of env.</description>
        </parameter>
        <parameter>
          <name>compilerVersion</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Version of the compiler to use, ex. &quot;1.3&quot;, &quot;1.5&quot;, if {@link #fork} is set to &lt;code&gt;true&lt;/code&gt;.</description>
        </parameter>
        <parameter>
          <name>debug</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set to &lt;code&gt;true&lt;/code&gt; to include debugging information in the compiled class files.</description>
        </parameter>
        <parameter>
          <name>debuglevel</name>
          <type>java.lang.String</type>
          <since>2.1</since>
          <required>false</required>
          <editable>true</editable>
          <description>Keyword list to be appended to the &lt;code&gt;-g&lt;/code&gt; command-line switch. Legal values are none or a
comma-separated list of the following keywords: &lt;code&gt;lines&lt;/code&gt;, &lt;code&gt;vars&lt;/code&gt;, and &lt;code&gt;source&lt;/code&gt;.
If debug level is not specified, by default, nothing will be appended to &lt;code&gt;-g&lt;/code&gt;.
If debug is not turned on, this attribute will be ignored.</description>
        </parameter>
        <parameter>
          <name>encoding</name>
          <type>java.lang.String</type>
          <since>2.1</since>
          <required>false</required>
          <editable>true</editable>
          <description>The -encoding argument for the Java compiler.</description>
        </parameter>
        <parameter>
          <name>excludes</name>
          <type>java.util.Set</type>
          <required>false</required>
          <editable>true</editable>
          <description>A list of exclusion filters for the compiler.</description>
        </parameter>
        <parameter>
          <name>executable</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the executable of the compiler to use when {@link #fork} is &lt;code&gt;true&lt;/code&gt;.</description>
        </parameter>
        <parameter>
          <name>failOnError</name>
          <type>boolean</type>
          <since>2.0.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>Indicates whether the build will continue even if there are compilation errors.</description>
        </parameter>
        <parameter>
          <name>failOnWarning</name>
          <type>boolean</type>
          <since>3.6</since>
          <required>false</required>
          <editable>true</editable>
          <description>Indicates whether the build will continue even if there are compilation warnings.</description>
        </parameter>
        <parameter>
          <name>fileExtensions</name>
          <type>java.util.List</type>
          <since>3.1</since>
          <required>false</required>
          <editable>true</editable>
          <description>file extensions to check timestamp for incremental build
&lt;b&gt;default contains only &lt;code&gt;.class&lt;/code&gt;&lt;/b&gt;</description>
        </parameter>
        <parameter>
          <name>forceJavacCompilerUse</name>
          <type>boolean</type>
          <since>3.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>compiler can now use javax.tools if available in your current jdk, you can disable this feature
using -Dmaven.compiler.forceJavacCompilerUse=true or in the plugin configuration</description>
        </parameter>
        <parameter>
          <name>fork</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Allows running the compiler in a separate process.
If &lt;code&gt;false&lt;/code&gt; it uses the built in compiler, while if &lt;code&gt;true&lt;/code&gt; it will use an executable.</description>
        </parameter>
        <parameter>
          <name>generatedSourcesDirectory</name>
          <type>java.io.File</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Specify where to place generated source files created by annotation processing. Only applies to JDK 1.6+
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>includes</name>
          <type>java.util.Set</type>
          <required>false</required>
          <editable>true</editable>
          <description>A list of inclusion filters for the compiler.</description>
        </parameter>
        <parameter>
          <name>jdkToolchain</name>
          <type>java.util.Map</type>
          <since>3.6</since>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Specify the requirements for this jdk toolchain.
This overrules the toolchain selected by the maven-toolchain-plugin.
&lt;/p&gt;
&lt;strong&gt;note:&lt;/strong&gt; requires at least Maven 3.3.1</description>
        </parameter>
        <parameter>
          <name>maxmem</name>
          <type>java.lang.String</type>
          <since>2.0.1</since>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the maximum size, in megabytes, of the memory allocation pool, ex. &quot;128&quot;, &quot;128m&quot;
if {@link #fork} is set to &lt;code&gt;true&lt;/code&gt;.</description>
        </parameter>
        <parameter>
          <name>meminitial</name>
          <type>java.lang.String</type>
          <since>2.0.1</since>
          <required>false</required>
          <editable>true</editable>
          <description>Initial size, in megabytes, of the memory allocation pool, ex. &quot;64&quot;, &quot;64m&quot;
if {@link #fork} is set to &lt;code&gt;true&lt;/code&gt;.</description>
        </parameter>
        <parameter>
          <name>mojoExecution</name>
          <type>org.apache.maven.plugin.MojoExecution</type>
          <since>3.0 needed for storing the status for the incremental build support.</since>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>optimize</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set to &lt;code&gt;true&lt;/code&gt; to optimize the compiled code using the compiler&apos;s optimization methods.</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The directory for compiled classes.</description>
        </parameter>
        <parameter>
          <name>outputFileName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the name of the output file when compiling a set of
sources to a single file.
&lt;p/&gt;
expression=&quot;${project.build.finalName}&quot;</description>
        </parameter>
        <parameter>
          <name>parameters</name>
          <type>boolean</type>
          <since>3.6.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>Set to &lt;code&gt;true&lt;/code&gt; to generate metadata for reflection on method parameters.</description>
        </parameter>
        <parameter>
          <name>proc</name>
          <type>java.lang.String</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Sets whether annotation processing is performed or not. Only applies to JDK 1.6+
If not set, both compilation and annotation processing are performed at the same time.
&lt;/p&gt;
&lt;p&gt;Allowed values are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;none&lt;/code&gt; - no annotation processing is performed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;only&lt;/code&gt; - only annotation processing is done, no compilation.&lt;/li&gt;
&lt;/ul&gt;</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The current project instance. This is used for propagating generated-sources paths as compile/testCompile source
roots.</description>
        </parameter>
        <parameter>
          <name>projectArtifact</name>
          <type>org.apache.maven.artifact.Artifact</type>
          <required>true</required>
          <editable>false</editable>
          <description>Projects main artifact.</description>
        </parameter>
        <parameter>
          <name>release</name>
          <type>java.lang.String</type>
          <since>3.6</since>
          <required>false</required>
          <editable>true</editable>
          <description>The -release argument for the Java compiler, supported since Java9</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description>The current build session instance. This is used for toolchain manager API calls.</description>
        </parameter>
        <parameter>
          <name>showDeprecation</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets whether to show source locations where deprecated APIs are used.</description>
        </parameter>
        <parameter>
          <name>showWarnings</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set to &lt;code&gt;true&lt;/code&gt; to show compilation warnings.</description>
        </parameter>
        <parameter>
          <name>skipMain</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to &apos;true&apos; to bypass compilation of main sources. Its use is NOT RECOMMENDED, but quite convenient on
occasion.</description>
        </parameter>
        <parameter>
          <name>skipMultiThreadWarning</name>
          <type>boolean</type>
          <since>2.5</since>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>source</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The -source argument for the Java compiler.</description>
        </parameter>
        <parameter>
          <name>staleMillis</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the granularity in milliseconds of the last modification
date for testing whether a source needs recompilation.</description>
        </parameter>
        <parameter>
          <name>target</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The -target argument for the Java compiler.</description>
        </parameter>
        <parameter>
          <name>useIncrementalCompilation</name>
          <type>boolean</type>
          <since>3.1</since>
          <required>false</required>
          <editable>true</editable>
          <description>to enable/disable incrementation compilation feature</description>
        </parameter>
        <parameter>
          <name>verbose</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set to &lt;code&gt;true&lt;/code&gt; to show messages about what the compiler is doing.</description>
        </parameter>
      </parameters>
      <configuration>
        <basedir implementation="java.io.File" default-value="${basedir}"/>
        <buildDirectory implementation="java.io.File" default-value="${project.build.directory}"/>
        <compilePath implementation="java.util.List" default-value="${project.compileClasspathElements}"/>
        <compileSourceRoots implementation="java.util.List" default-value="${project.compileSourceRoots}"/>
        <compilerId implementation="java.lang.String" default-value="javac">${maven.compiler.compilerId}</compilerId>
        <compilerReuseStrategy implementation="java.lang.String" default-value="${reuseCreated}">${maven.compiler.compilerReuseStrategy}</compilerReuseStrategy>
        <compilerVersion implementation="java.lang.String">${maven.compiler.compilerVersion}</compilerVersion>
        <debug implementation="boolean" default-value="true">${maven.compiler.debug}</debug>
        <debuglevel implementation="java.lang.String">${maven.compiler.debuglevel}</debuglevel>
        <encoding implementation="java.lang.String" default-value="${project.build.sourceEncoding}">${encoding}</encoding>
        <executable implementation="java.lang.String">${maven.compiler.executable}</executable>
        <failOnError implementation="boolean" default-value="true">${maven.compiler.failOnError}</failOnError>
        <failOnWarning implementation="boolean" default-value="false">${maven.compiler.failOnWarning}</failOnWarning>
        <forceJavacCompilerUse implementation="boolean" default-value="false">${maven.compiler.forceJavacCompilerUse}</forceJavacCompilerUse>
        <fork implementation="boolean" default-value="false">${maven.compiler.fork}</fork>
        <generatedSourcesDirectory implementation="java.io.File" default-value="${project.build.directory}/generated-sources/annotations"/>
        <maxmem implementation="java.lang.String">${maven.compiler.maxmem}</maxmem>
        <meminitial implementation="java.lang.String">${maven.compiler.meminitial}</meminitial>
        <mojoExecution implementation="org.apache.maven.plugin.MojoExecution" default-value="${mojoExecution}"/>
        <optimize implementation="boolean" default-value="false">${maven.compiler.optimize}</optimize>
        <outputDirectory implementation="java.io.File" default-value="${project.build.outputDirectory}"/>
        <parameters implementation="boolean" default-value="false">${maven.compiler.parameters}</parameters>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <projectArtifact implementation="org.apache.maven.artifact.Artifact" default-value="${project.artifact}"/>
        <release implementation="java.lang.String">${maven.compiler.release}</release>
        <session implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
        <showDeprecation implementation="boolean" default-value="false">${maven.compiler.showDeprecation}</showDeprecation>
        <showWarnings implementation="boolean" default-value="false">${maven.compiler.showWarnings}</showWarnings>
        <skipMain implementation="boolean">${maven.main.skip}</skipMain>
        <skipMultiThreadWarning implementation="boolean" default-value="false">${maven.compiler.skipMultiThreadWarning}</skipMultiThreadWarning>
        <source implementation="java.lang.String" default-value="1.5">${maven.compiler.source}</source>
        <staleMillis implementation="int" default-value="0">${lastModGranularityMs}</staleMillis>
        <target implementation="java.lang.String" default-value="1.5">${maven.compiler.target}</target>
        <useIncrementalCompilation implementation="boolean" default-value="true">${maven.compiler.useIncrementalCompilation}</useIncrementalCompilation>
        <verbose implementation="boolean" default-value="false">${maven.compiler.verbose}</verbose>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.handler.manager.ArtifactHandlerManager</role>
          <field-name>artifactHandlerManager</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.compiler.manager.CompilerManager</role>
          <field-name>compilerManager</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.languages.java.jpms.LocationManager</role>
          <field-name>locationManager</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.repository.RepositorySystem</role>
          <field-name>repositorySystem</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ResolutionErrorHandler</role>
          <field-name>resolutionErrorHandler</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.toolchain.ToolchainManager</role>
          <field-name>toolchainManager</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>help</goal>
      <description>Display help information on maven-compiler-plugin.&lt;br&gt;
Call &lt;code&gt;mvn compiler:help -Ddetail=true -Dgoal=&amp;lt;goal-name&amp;gt;&lt;/code&gt; to display parameter details.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.maven.plugin.compiler.HelpMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>detail</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If &lt;code&gt;true&lt;/code&gt;, display all settable properties for each goal.</description>
        </parameter>
        <parameter>
          <name>goal</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the goal for which to show help. If unspecified, all goals will be displayed.</description>
        </parameter>
        <parameter>
          <name>indentSize</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The number of spaces per indentation level, should be positive.</description>
        </parameter>
        <parameter>
          <name>lineLength</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maximum length of a display line, should be positive.</description>
        </parameter>
      </parameters>
      <configuration>
        <detail implementation="boolean" default-value="false">${detail}</detail>
        <goal implementation="java.lang.String">${goal}</goal>
        <indentSize implementation="int" default-value="2">${indentSize}</indentSize>
        <lineLength implementation="int" default-value="80">${lineLength}</lineLength>
      </configuration>
    </mojo>
    <mojo>
      <goal>testCompile</goal>
      <description>Compiles application test sources.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>test-compile</phase>
      <implementation>org.apache.maven.plugin.compiler.TestCompilerMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <since>2.0</since>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>annotationProcessorPaths</name>
          <type>java.util.List</type>
          <since>3.5</since>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Classpath elements to supply as annotation processor path. If specified, the compiler will detect annotation
processors only in those classpath elements. If omitted, the default classpath is used to detect annotation
processors. The detection itself depends on the configuration of {@code annotationProcessors}.
&lt;/p&gt;
&lt;p&gt;
Each classpath element is specified using their Maven coordinates (groupId, artifactId, version, classifier,
type). Transitive dependencies are added automatically. Example:
&lt;/p&gt;

&lt;pre&gt;
&amp;lt;configuration&amp;gt;
  &amp;lt;annotationProcessorPaths&amp;gt;
    &amp;lt;path&amp;gt;
      &amp;lt;groupId&amp;gt;org.sample&amp;lt;/groupId&amp;gt;
      &amp;lt;artifactId&amp;gt;sample-annotation-processor&amp;lt;/artifactId&amp;gt;
      &amp;lt;version&amp;gt;1.2.3&amp;lt;/version&amp;gt;
    &amp;lt;/path&amp;gt;
    &amp;lt;!-- ... more ... --&amp;gt;
  &amp;lt;/annotationProcessorPaths&amp;gt;
&amp;lt;/configuration&amp;gt;
&lt;/pre&gt;</description>
        </parameter>
        <parameter>
          <name>annotationProcessors</name>
          <type>java.lang.String[]</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Names of annotation processors to run. Only applies to JDK 1.6+
If not set, the default annotation processors discovery process applies.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>basedir</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The directory to run the compiler from if fork is true.</description>
        </parameter>
        <parameter>
          <name>buildDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The target directory of the compiler if fork is true.</description>
        </parameter>
        <parameter>
          <name>compilePath</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>compileSourceRoots</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>The source directories containing the test-source to be compiled.</description>
        </parameter>
        <parameter>
          <name>compilerArgs</name>
          <type>java.util.List</type>
          <since>3.1</since>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Sets the arguments to be passed to the compiler if {@link #fork} is set to &lt;code&gt;true&lt;/code&gt;.
Example:
&lt;pre&gt;
&amp;lt;compilerArgs&amp;gt;
  &amp;lt;arg&amp;gt;-Xmaxerrs=1000&amp;lt;/arg&amp;gt;
  &amp;lt;arg&amp;gt;-Xlint&amp;lt;/arg&amp;gt;
  &amp;lt;arg&amp;gt;-J-Duser.language=en_us&amp;lt;/arg&amp;gt;
&amp;lt;/compilerArgs&amp;gt;
&lt;/pre&gt;</description>
        </parameter>
        <parameter>
          <name>compilerArgument</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Sets the unformatted single argument string to be passed to the compiler if {@link #fork} is set to
&lt;code&gt;true&lt;/code&gt;. To pass multiple arguments such as &lt;code&gt;-Xmaxerrs 1000&lt;/code&gt; (which are actually two
arguments) you have to use {@link #compilerArguments}.
&lt;/p&gt;
&lt;p&gt;
This is because the list of valid arguments passed to a Java compiler varies based on the compiler version.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>compilerArguments</name>
          <type>java.util.Map</type>
          <since>2.0.1</since>
          <deprecated>use {@link #compilerArgs} instead.</deprecated>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Sets the arguments to be passed to the compiler (prepending a dash) if {@link #fork} is set to &lt;code&gt;true&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This is because the list of valid arguments passed to a Java compiler varies based on the compiler version.
&lt;/p&gt;
&lt;p&gt;
To pass &lt;code&gt;-Xmaxerrs 1000 -Xlint -Xlint:-path -Averbose=true&lt;/code&gt; you should include the following:
&lt;/p&gt;

&lt;pre&gt;
&amp;lt;compilerArguments&amp;gt;
  &amp;lt;Xmaxerrs&amp;gt;1000&amp;lt;/Xmaxerrs&amp;gt;
  &amp;lt;Xlint/&amp;gt;
  &amp;lt;Xlint:-path/&amp;gt;
  &amp;lt;Averbose&amp;gt;true&amp;lt;/Averbose&amp;gt;
&amp;lt;/compilerArguments&amp;gt;
&lt;/pre&gt;</description>
        </parameter>
        <parameter>
          <name>compilerId</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The compiler id of the compiler to use. See this
&lt;a href=&quot;non-javac-compilers.html&quot;&gt;guide&lt;/a&gt; for more information.</description>
        </parameter>
        <parameter>
          <name>compilerReuseStrategy</name>
          <type>java.lang.String</type>
          <since>2.5</since>
          <required>false</required>
          <editable>true</editable>
          <description>Strategy to re use javacc class created:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;reuseCreated&lt;/code&gt; (default): will reuse already created but in case of multi-threaded builds, each
thread will have its own instance&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reuseSame&lt;/code&gt;: the same Javacc class will be used for each compilation even for multi-threaded build
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alwaysNew&lt;/code&gt;: a new Javacc class will be created for each compilation&lt;/li&gt;
&lt;/ul&gt;
Note this parameter value depends on the os/jdk you are using, but the default value should work on most of env.</description>
        </parameter>
        <parameter>
          <name>compilerVersion</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Version of the compiler to use, ex. &quot;1.3&quot;, &quot;1.5&quot;, if {@link #fork} is set to &lt;code&gt;true&lt;/code&gt;.</description>
        </parameter>
        <parameter>
          <name>debug</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set to &lt;code&gt;true&lt;/code&gt; to include debugging information in the compiled class files.</description>
        </parameter>
        <parameter>
          <name>debuglevel</name>
          <type>java.lang.String</type>
          <since>2.1</since>
          <required>false</required>
          <editable>true</editable>
          <description>Keyword list to be appended to the &lt;code&gt;-g&lt;/code&gt; command-line switch. Legal values are none or a
comma-separated list of the following keywords: &lt;code&gt;lines&lt;/code&gt;, &lt;code&gt;vars&lt;/code&gt;, and &lt;code&gt;source&lt;/code&gt;.
If debug level is not specified, by default, nothing will be appended to &lt;code&gt;-g&lt;/code&gt;.
If debug is not turned on, this attribute will be ignored.</description>
        </parameter>
        <parameter>
          <name>encoding</name>
          <type>java.lang.String</type>
          <since>2.1</since>
          <required>false</required>
          <editable>true</editable>
          <description>The -encoding argument for the Java compiler.</description>
        </parameter>
        <parameter>
          <name>executable</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the executable of the compiler to use when {@link #fork} is &lt;code&gt;true&lt;/code&gt;.</description>
        </parameter>
        <parameter>
          <name>failOnError</name>
          <type>boolean</type>
          <since>2.0.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>Indicates whether the build will continue even if there are compilation errors.</description>
        </parameter>
        <parameter>
          <name>failOnWarning</name>
          <type>boolean</type>
          <since>3.6</since>
          <required>false</required>
          <editable>true</editable>
          <description>Indicates whether the build will continue even if there are compilation warnings.</description>
        </parameter>
        <parameter>
          <name>fileExtensions</name>
          <type>java.util.List</type>
          <since>3.1</since>
          <required>false</required>
          <editable>true</editable>
          <description>file extensions to check timestamp for incremental build
&lt;b&gt;default contains only &lt;code&gt;.class&lt;/code&gt;&lt;/b&gt;</description>
        </parameter>
        <parameter>
          <name>forceJavacCompilerUse</name>
          <type>boolean</type>
          <since>3.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>compiler can now use javax.tools if available in your current jdk, you can disable this feature
using -Dmaven.compiler.forceJavacCompilerUse=true or in the plugin configuration</description>
        </parameter>
        <parameter>
          <name>fork</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Allows running the compiler in a separate process.
If &lt;code&gt;false&lt;/code&gt; it uses the built in compiler, while if &lt;code&gt;true&lt;/code&gt; it will use an executable.</description>
        </parameter>
        <parameter>
          <name>generatedTestSourcesDirectory</name>
          <type>java.io.File</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Specify where to place generated source files created by annotation processing.
Only applies to JDK 1.6+
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>jdkToolchain</name>
          <type>java.util.Map</type>
          <since>3.6</since>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Specify the requirements for this jdk toolchain.
This overrules the toolchain selected by the maven-toolchain-plugin.
&lt;/p&gt;
&lt;strong&gt;note:&lt;/strong&gt; requires at least Maven 3.3.1</description>
        </parameter>
        <parameter>
          <name>maxmem</name>
          <type>java.lang.String</type>
          <since>2.0.1</since>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the maximum size, in megabytes, of the memory allocation pool, ex. &quot;128&quot;, &quot;128m&quot;
if {@link #fork} is set to &lt;code&gt;true&lt;/code&gt;.</description>
        </parameter>
        <parameter>
          <name>meminitial</name>
          <type>java.lang.String</type>
          <since>2.0.1</since>
          <required>false</required>
          <editable>true</editable>
          <description>Initial size, in megabytes, of the memory allocation pool, ex. &quot;64&quot;, &quot;64m&quot;
if {@link #fork} is set to &lt;code&gt;true&lt;/code&gt;.</description>
        </parameter>
        <parameter>
          <name>mojoExecution</name>
          <type>org.apache.maven.plugin.MojoExecution</type>
          <since>3.0 needed for storing the status for the incremental build support.</since>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>optimize</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set to &lt;code&gt;true&lt;/code&gt; to optimize the compiled code using the compiler&apos;s optimization methods.</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description>The directory where compiled test classes go.</description>
        </parameter>
        <parameter>
          <name>outputFileName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the name of the output file when compiling a set of
sources to a single file.
&lt;p/&gt;
expression=&quot;${project.build.finalName}&quot;</description>
        </parameter>
        <parameter>
          <name>parameters</name>
          <type>boolean</type>
          <since>3.6.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>Set to &lt;code&gt;true&lt;/code&gt; to generate metadata for reflection on method parameters.</description>
        </parameter>
        <parameter>
          <name>proc</name>
          <type>java.lang.String</type>
          <since>2.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Sets whether annotation processing is performed or not. Only applies to JDK 1.6+
If not set, both compilation and annotation processing are performed at the same time.
&lt;/p&gt;
&lt;p&gt;Allowed values are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;none&lt;/code&gt; - no annotation processing is performed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;only&lt;/code&gt; - only annotation processing is done, no compilation.&lt;/li&gt;
&lt;/ul&gt;</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The current project instance. This is used for propagating generated-sources paths as compile/testCompile source
roots.</description>
        </parameter>
        <parameter>
          <name>release</name>
          <type>java.lang.String</type>
          <since>3.6</since>
          <required>false</required>
          <editable>true</editable>
          <description>The -release argument for the Java compiler, supported since Java9</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description>The current build session instance. This is used for toolchain manager API calls.</description>
        </parameter>
        <parameter>
          <name>showDeprecation</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets whether to show source locations where deprecated APIs are used.</description>
        </parameter>
        <parameter>
          <name>showWarnings</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set to &lt;code&gt;true&lt;/code&gt; to show compilation warnings.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to &apos;true&apos; to bypass compilation of test sources.
Its use is NOT RECOMMENDED, but quite convenient on occasion.</description>
        </parameter>
        <parameter>
          <name>skipMultiThreadWarning</name>
          <type>boolean</type>
          <since>2.5</since>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>source</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The -source argument for the Java compiler.</description>
        </parameter>
        <parameter>
          <name>staleMillis</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the granularity in milliseconds of the last modification
date for testing whether a source needs recompilation.</description>
        </parameter>
        <parameter>
          <name>target</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The -target argument for the Java compiler.</description>
        </parameter>
        <parameter>
          <name>testCompilerArgument</name>
          <type>java.lang.String</type>
          <since>2.1</since>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Sets the unformatted argument string to be passed to test compiler if fork is set to true.
&lt;/p&gt;
&lt;p&gt;
This is because the list of valid arguments passed to a Java compiler
varies based on the compiler version.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>testCompilerArguments</name>
          <type>java.util.Map</type>
          <since>2.1</since>
          <required>false</required>
          <editable>true</editable>
          <description>&lt;p&gt;
Sets the arguments to be passed to test compiler (prepending a dash) if fork is set to true.
&lt;/p&gt;
&lt;p&gt;
This is because the list of valid arguments passed to a Java compiler
varies based on the compiler version.
&lt;/p&gt;</description>
        </parameter>
        <parameter>
          <name>testExcludes</name>
          <type>java.util.Set</type>
          <required>false</required>
          <editable>true</editable>
          <description>A list of exclusion filters for the compiler.</description>
        </parameter>
        <parameter>
          <name>testIncludes</name>
          <type>java.util.Set</type>
          <required>false</required>
          <editable>true</editable>
          <description>A list of inclusion filters for the compiler.</description>
        </parameter>
        <parameter>
          <name>testPath</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>testRelease</name>
          <type>java.lang.String</type>
          <since>3.6</since>
          <required>false</required>
          <editable>true</editable>
          <description>the -release argument for the test Java compiler</description>
        </parameter>
        <parameter>
          <name>testSource</name>
          <type>java.lang.String</type>
          <since>2.1</since>
          <required>false</required>
          <editable>true</editable>
          <description>The -source argument for the test Java compiler.</description>
        </parameter>
        <parameter>
          <name>testTarget</name>
          <type>java.lang.String</type>
          <since>2.1</since>
          <required>false</required>
          <editable>true</editable>
          <description>The -target argument for the test Java compiler.</description>
        </parameter>
        <parameter>
          <name>useIncrementalCompilation</name>
          <type>boolean</type>
          <since>3.1</since>
          <required>false</required>
          <editable>true</editable>
          <description>to enable/disable incrementation compilation feature</description>
        </parameter>
        <parameter>
          <name>verbose</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set to &lt;code&gt;true&lt;/code&gt; to show messages about what the compiler is doing.</description>
        </parameter>
      </parameters>
      <configuration>
        <basedir implementation="java.io.File" default-value="${basedir}"/>
        <buildDirectory implementation="java.io.File" default-value="${project.build.directory}"/>
        <compilePath implementation="java.util.List" default-value="${project.compileClasspathElements}"/>
        <compileSourceRoots implementation="java.util.List" default-value="${project.testCompileSourceRoots}"/>
        <compilerId implementation="java.lang.String" default-value="javac">${maven.compiler.compilerId}</compilerId>
        <compilerReuseStrategy implementation="java.lang.String" default-value="${reuseCreated}">${maven.compiler.compilerReuseStrategy}</compilerReuseStrategy>
        <compilerVersion implementation="java.lang.String">${maven.compiler.compilerVersion}</compilerVersion>
        <debug implementation="boolean" default-value="true">${maven.compiler.debug}</debug>
        <debuglevel implementation="java.lang.String">${maven.compiler.debuglevel}</debuglevel>
        <encoding implementation="java.lang.String" default-value="${project.build.sourceEncoding}">${encoding}</encoding>
        <executable implementation="java.lang.String">${maven.compiler.executable}</executable>
        <failOnError implementation="boolean" default-value="true">${maven.compiler.failOnError}</failOnError>
        <failOnWarning implementation="boolean" default-value="false">${maven.compiler.failOnWarning}</failOnWarning>
        <forceJavacCompilerUse implementation="boolean" default-value="false">${maven.compiler.forceJavacCompilerUse}</forceJavacCompilerUse>
        <fork implementation="boolean" default-value="false">${maven.compiler.fork}</fork>
        <generatedTestSourcesDirectory implementation="java.io.File" default-value="${project.build.directory}/generated-test-sources/test-annotations"/>
        <maxmem implementation="java.lang.String">${maven.compiler.maxmem}</maxmem>
        <meminitial implementation="java.lang.String">${maven.compiler.meminitial}</meminitial>
        <mojoExecution implementation="org.apache.maven.plugin.MojoExecution" default-value="${mojoExecution}"/>
        <optimize implementation="boolean" default-value="false">${maven.compiler.optimize}</optimize>
        <outputDirectory implementation="java.io.File" default-value="${project.build.testOutputDirectory}"/>
        <parameters implementation="boolean" default-value="false">${maven.compiler.parameters}</parameters>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <release implementation="java.lang.String">${maven.compiler.release}</release>
        <session implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
        <showDeprecation implementation="boolean" default-value="false">${maven.compiler.showDeprecation}</showDeprecation>
        <showWarnings implementation="boolean" default-value="false">${maven.compiler.showWarnings}</showWarnings>
        <skip implementation="boolean">${maven.test.skip}</skip>
        <skipMultiThreadWarning implementation="boolean" default-value="false">${maven.compiler.skipMultiThreadWarning}</skipMultiThreadWarning>
        <source implementation="java.lang.String" default-value="1.5">${maven.compiler.source}</source>
        <staleMillis implementation="int" default-value="0">${lastModGranularityMs}</staleMillis>
        <target implementation="java.lang.String" default-value="1.5">${maven.compiler.target}</target>
        <testPath implementation="java.util.List" default-value="${project.testClasspathElements}"/>
        <testRelease implementation="java.lang.String">${maven.compiler.testRelease}</testRelease>
        <testSource implementation="java.lang.String">${maven.compiler.testSource}</testSource>
        <testTarget implementation="java.lang.String">${maven.compiler.testTarget}</testTarget>
        <useIncrementalCompilation implementation="boolean" default-value="true">${maven.compiler.useIncrementalCompilation}</useIncrementalCompilation>
        <verbose implementation="boolean" default-value="false">${maven.compiler.verbose}</verbose>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.handler.manager.ArtifactHandlerManager</role>
          <field-name>artifactHandlerManager</field-name>
        </requirement>
        <requirement>
          <role>org.codehaus.plexus.compiler.manager.CompilerManager</role>
          <field-name>compilerManager</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.repository.RepositorySystem</role>
          <field-name>repositorySystem</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ResolutionErrorHandler</role>
          <field-name>resolutionErrorHandler</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.toolchain.ToolchainManager</role>
          <field-name>toolchainManager</field-name>
        </requirement>
      </requirements>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-inject-plexus</artifactId>
      <type>jar</type>
      <version>1.4.2</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-inject-bean</artifactId>
      <type>jar</type>
      <version>1.4.2</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-guice</artifactId>
      <type>jar</type>
      <version>2.1.7</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <type>jar</type>
      <version>2.0.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings-builder</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-repository-metadata</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model-builder</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-aether-provider</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-impl</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-spi</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-api</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-util</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-interpolation</artifactId>
      <type>jar</type>
      <version>1.14</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-classworlds</artifactId>
      <type>jar</type>
      <version>2.2.3</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-component-annotations</artifactId>
      <type>jar</type>
      <version>1.6</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.plexus</groupId>
      <artifactId>plexus-sec-dispatcher</artifactId>
      <type>jar</type>
      <version>1.3</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.plexus</groupId>
      <artifactId>plexus-cipher</artifactId>
      <type>jar</type>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-shared-utils</artifactId>
      <type>jar</type>
      <version>3.1.0</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <type>jar</type>
      <version>2.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-shared-incremental</artifactId>
      <type>jar</type>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-java</artifactId>
      <type>jar</type>
      <version>0.9.2</version>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm</artifactId>
      <type>jar</type>
      <version>6.0_BETA</version>
    </dependency>
    <dependency>
      <groupId>com.thoughtworks.qdox</groupId>
      <artifactId>qdox</artifactId>
      <type>jar</type>
      <version>2.0-M7</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-compiler-api</artifactId>
      <type>jar</type>
      <version>2.8.2</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-compiler-manager</artifactId>
      <type>jar</type>
      <version>2.8.2</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-compiler-javac</artifactId>
      <type>jar</type>
      <version>2.8.2</version>
    </dependency>
  </dependencies>
</plugin>